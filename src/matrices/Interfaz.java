package matrices;


import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author aguir
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnsuma = new javax.swing.JButton();
        btnresta = new javax.swing.JButton();
        btndeterminante = new javax.swing.JButton();
        btntrazo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnsuma.setText("Suma");
        btnsuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsumaActionPerformed(evt);
            }
        });

        btnresta.setText("Resta");
        btnresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrestaActionPerformed(evt);
            }
        });

        btndeterminante.setText("Determinante");
        btndeterminante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeterminanteActionPerformed(evt);
            }
        });

        btntrazo.setText("Trazo");
        btntrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntrazoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btntrazo)
                    .addComponent(btnresta)
                    .addComponent(btnsuma))
                .addContainerGap(144, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btndeterminante)
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addComponent(btnsuma)
                .addGap(18, 18, 18)
                .addComponent(btnresta)
                .addGap(18, 18, 18)
                .addComponent(btndeterminante)
                .addGap(18, 18, 18)
                .addComponent(btntrazo)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsumaActionPerformed
//public static void sumarMatrices() {
int tamaño = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matrices"));

int mat1[][] = new int[tamaño][tamaño];
int mat2[][] = new int[tamaño][tamaño];
int mat3[][] = new int[tamaño][tamaño];

if (tamaño > 1) {
JOptionPane.showMessageDialog(null, "Llene las matrices");

JOptionPane.showMessageDialog(null, "Matriz 1");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {

mat1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "Matriz 2");
for (int i = 0; i < mat2.length; i++) {
for (int j = 0; j < mat2.length; j++) {

mat2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "sumando matrices....");
for (int i = 0; i < mat3.length; i++) {
for (int j = 0; j < mat3.length; j++) {
mat3[i][j] = mat1[i][j] + mat2[i][j];
}
}

JOptionPane.showMessageDialog(null, "matriz resultante:");
String s = "";

for (int i = 0; i < mat3.length; i++) {
for (int j = 0; j < mat3.length; j++) {
s += mat3[i][j];
s += "";

}
s += "\n";
}
JOptionPane.showMessageDialog(null, s);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsumaActionPerformed

    private void btnrestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrestaActionPerformed
//public static void restarMatrices() {
int tamaño = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matrices"));

int mat1[][] = new int[tamaño][tamaño];
int mat2[][] = new int[tamaño][tamaño];
int mat3[][] = new int[tamaño][tamaño];

if (tamaño > 1) {

JOptionPane.showMessageDialog(null, "Llene las matrices");

JOptionPane.showMessageDialog(null, "Matriz 1");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {

mat1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "Matriz 2");
for (int i = 0; i < mat2.length; i++) {
for (int j = 0; j < mat2.length; j++) {

mat2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "restando matrices....");
for (int i = 0; i < mat3.length; i++) {
for (int j = 0; j < mat3.length; j++) {
mat3[i][j] = mat1[i][j] - mat2[i][j];
}
}

JOptionPane.showMessageDialog(null, "matriz resultante:");
String s = "";

for (int i = 0; i < mat3.length; i++) {
for (int j = 0; j < mat3.length; j++) {
s += mat3[i][j];
s += "";

}
s += "\n";
}
JOptionPane.showMessageDialog(null, s);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnrestaActionPerformed

    private void btntrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntrazoActionPerformed
//public static void trazaMatrices() {
int tamaño = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matriz"));

int mat1[][] = new int[tamaño][tamaño];
int mat2[][] = new int[tamaño][tamaño];

if (tamaño > 1) {
JOptionPane.showMessageDialog(null, "Llene la matriz");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {

mat1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "trazando matriz....");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {
if (i == j) {
mat2[i][j] = mat1[i][j];
}
}
}

JOptionPane.showMessageDialog(null, "matriz resultante:");
String s = "";

for (int i = 0; i < mat2.length; i++) {
for (int j = 0; j < mat2.length; j++) {
if (i == j) {
s += mat2[i][j];
s += "";
}
}
s += "+";
}
JOptionPane.showMessageDialog(null, "T = La suma de " + s);
}

        // TODO add your handling code here:
    }//GEN-LAST:event_btntrazoActionPerformed

    private void btndeterminanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeterminanteActionPerformed
//public static void determinante() {
int tamaño = Integer.parseInt(JOptionPane.showInputDialog("Tamaño de las matriz"));

int mat1[][] = new int[tamaño][tamaño];
int detA = 0, detB = 0, detC = 0, detD = 0, res = 0;



if (tamaño == 2) {
JOptionPane.showMessageDialog(null, "Llene la matriz");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {

mat1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("llenar posicion: fila: " + (i + 1) + "Columna: " + (j + 1)));
}
}

JOptionPane.showMessageDialog(null, "obteniendo determinante....");
for (int i = 0; i < mat1.length; i++) {
for (int j = 0; j < mat1.length; j++) {
if (i == 0 && j== 0) {
detA += mat1[i][j];
}else if ( i == 0 && j == 1){
detC += mat1[i][j];
}else if ( i == 1 && j == 0){
detD += mat1[i][j];
}else if ( i == 1 && j == 1){
detB += mat1[i][j];
}
}
}

JOptionPane.showMessageDialog(null, "Resultado = "+detA+"*\t"+detB+"-\t"+detC+"*\t"+detD);
res = (detA*detB)-(detC*detD);
JOptionPane.showMessageDialog(null, res);



}


        // TODO add your handling code here:
    }//GEN-LAST:event_btndeterminanteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndeterminante;
    private javax.swing.JButton btnresta;
    private javax.swing.JButton btnsuma;
    private javax.swing.JButton btntrazo;
    // End of variables declaration//GEN-END:variables
}
